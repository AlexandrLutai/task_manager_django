"""
Telegram –±–æ—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç Telegram –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
–¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏,
–æ—Ç–º–µ—á–∞—Ç—å –∏—Ö –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∏ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø—Ä–∏–≤—è–∑–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞
–Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ Telegram.

–ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç aiogram –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API –∏ aiohttp –¥–ª—è –æ–±—â–µ–Ω–∏—è
—Å Django REST API.
"""

import logging
import os
import aiohttp
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import Message
from aiogram.filters import Command
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()

API_TOKEN = os.getenv("BOT_TOKEN")
DJANGO_API_URL = os.getenv("DJANGO_API", "http://127.0.0.1:8000/api/")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
logging.basicConfig(level=logging.INFO)

bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()


@dp.message(Command("start"))
async def start(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±—ä—è—Å–Ω—è–µ—Ç –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø—Ä–∏–≤—è–∑–∫–µ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞ –∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–∞–Ω–¥–æ–π /start
    """
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n"
        "–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:\n"
        "1Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑—É–π—Å—è –≤ –≤–µ–±–µ –∏ –æ—Ç–∫—Ä–æ–π —Ñ–æ—Ä–º—É –ø—Ä–∏–≤—è–∑–∫–∏ Telegram\n"
        f"2Ô∏è‚É£ –í–≤–µ–¥–∏ –≤–æ—Ç —ç—Ç–æ—Ç –∫–æ–¥: {message.from_user.id}\n"
        "3Ô∏è‚É£ –ü–æ—Ç–æ–º –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /tasks"
    )


@dp.message(Command("tasks"))
async def tasks(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /tasks.
    
    –ü–æ–ª—É—á–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Django API.
    –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø—Ä–∏–≤—è–∑–∫–µ.
    –î–ª—è –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–∞–Ω–¥–æ–π /tasks
    """
    telegram_id = message.from_user.id

    async with aiohttp.ClientSession() as session:
        async with session.get(
            f"{DJANGO_API_URL}telegram/tasks/?telegram_id={telegram_id}"
        ) as resp:
            if resp.status == 200:
                tasks = await resp.json()
                if not tasks:
                    await message.answer("üéâ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á!")
                    return

                for task in tasks:
                    text = (
                        f"<b>{task['title']}</b>\n"
                        f"üïì –°—Ä–æ–∫: {task['deadline']}\n"
                        f"{'‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞' if task['completed'] else '‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞'}"
                    )
                    if not task["completed"]:
                        text += f"\n\n–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å:\n/complete_{task['id']}"
                    await message.answer(text)
            elif resp.status == 404:
                await message.answer(
                    "üîí –¢—ã –µ—â—ë –Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª Telegram –∫ –∞–∫–∫–∞—É–Ω—Ç—É.\n\n"
                    "–ù–∞–ø–∏—à–∏ /login, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –∏ –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –Ω–∞ —Å–∞–π—Ç–µ."
                )
            else:
                await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@dp.message(lambda m: m.text.startswith("/complete_"))
async def complete_task(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á (/complete_X).
    
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ—Ç–º–µ—á–∞—Ç—å –∑–∞–¥–∞—á–∏ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ
    –ø—Ä—è–º–æ –∏–∑ Telegram. –ò–∑–≤–ª–µ–∫–∞–µ—Ç ID –∑–∞–¥–∞—á–∏ –∏–∑ –∫–æ–º–∞–Ω–¥—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
    –∑–∞–ø—Ä–æ—Å –≤ Django API –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /complete_X, –≥–¥–µ X - ID –∑–∞–¥–∞—á–∏
    """
    telegram_id = message.from_user.id

    try:
        task_id = int(message.text.replace("/complete_", ""))
    except ValueError:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: /complete_5")
        return

    async with aiohttp.ClientSession() as session:
        async with session.post(
            f"{DJANGO_API_URL}telegram/complete-task/",
            json={"telegram_id": telegram_id, "task_id": task_id}
        ) as resp:
            if resp.status == 200:
                await message.answer("‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
            elif resp.status == 404:
                await message.answer("‚ùå –ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ —Ç–≤–æ—è.")
            else:
                await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞—á—É.")


@dp.message(Command("login"))
async def login_help(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /login.
    
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø—Ä–∏–≤—è–∑–∫–µ –µ–≥–æ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞
    –∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.
    
    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–∞–Ω–¥–æ–π /login
    """
    telegram_id = message.from_user.id
    await message.answer(
        f"üîê –ß—Ç–æ–±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å Telegram –∫ –∞–∫–∫–∞—É–Ω—Ç—É:\n\n"
        f"1Ô∏è‚É£ –í–æ–π–¥–∏—Ç–µ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
        f"2Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª <b>–ü—Ä–∏–≤—è–∑–∫–∞ Telegram</b>\n"
        f"3Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥: <code>{telegram_id}</code>\n\n"
        "–ü–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /tasks"
    )


if __name__ == "__main__":
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞.
    
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–ª–∏–Ω–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram API
    –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    import asyncio
    asyncio.run(dp.start_polling(bot))